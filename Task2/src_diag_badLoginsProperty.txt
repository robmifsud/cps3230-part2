digraph _logic_badLoginsProperty {
rankdir=LR;
node [shape = circle]; blocked unblocked;
node [shape = octagon]; unlockedPrematurely;
node [shape = point]; _s_s;
_s_s -> unblocked;
unblocked -> unblocked [ label = "(1) goodLogin\\\\badLogins = 0 ; System . out . println ( \" Good login observed. Bad logins:  \" + badLogins ) ; "];
unblocked -> unblocked [ label = "(2) badLogin\\badLogins < 2 \\badLogins ++ ; System . out . println ( \" Bad login observed. Bad logins:  \" + badLogins ) ; "];
unblocked -> blocked [ label = "(3) badLogin\\badLogins == 2 \\badLogins ++ ; lockedTime . reset ( ) ; System . out . println ( \" Bad login observed. Bad logins:  \" + badLogins ) ; "];
blocked -> unlockedPrematurely [ label = "(1) unlockAccount\\locked == false && lockedTime . compareTo ( 10 ) < 0 \\badLogins = 0 ; System . out . println ( \" Unblocked prematurely! Entering bad state! \" ) ; "];
blocked -> unblocked [ label = "(2) unlockAccount\\locked == false && lockedTime . compareTo ( 10 ) >= 0 \\badLogins = 0 ; System . out . println ( \" Going back to unblocked. \" ) ; "];
}